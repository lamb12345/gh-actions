name: Project building and deployment
on:
  push:
    branches:
      - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: get the codes
        uses: actions/checkout@v4
      - name: cache the dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: dependencies-${{ hashFiles('**/package-lock.json') }}
      - name: install the dependencies
        run: npm ci
      - name: lint the project
        run: npm run lint
  test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: get the codes
        uses: actions/checkout@v4
      - name: cache the dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: dependencies-${{ hashFiles('**/package-lock.json') }}
      - name: install the dependencies
        run: npm ci
      - name: test the project
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}

    steps:
      - name: get the codes
        uses: actions/checkout@v4
      - name: cache the dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: dependencies-${{ hashFiles('**/package-lock.json') }}
      - name: install the dependencies
        run: npm ci
      - name: build the project
        run: npm run build
      - name: produce the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
      - name: publish the file
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={} >>$GITHUB_OUTPUT' ';'
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download the artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
      - name: view artifacts
        run: ls
      - name: output the filename
        run: echo "${{needs.build.outputs.script-file}}"
      - name: deploy
        run: echo "deploying..."
